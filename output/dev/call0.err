output prefix: llvm/dev/call0
llvmas: /Users/cmk/llvm/bin/llvm-as
llc: /Users/cmk/llvm/bin/llc
cc: gcc
codegen: /Users/cmk/Developer/cworkspace/compiler/hw4/Lexer/answer/decafcomp
stdlib: /Users/cmk/Developer/cworkspace/compiler/hw4/Lexer/answer/decaf-stdlib.c
generating llvm code:/Users/cmk/Developer/cworkspace/compiler/hw4/Lexer/answer/decafcomp ... ok
; ModuleID = 'Test'

define i32 @main() {
entry:
  call void @test()
  ret i32 0
}

define void @test() {
entry:
  call void @print_int(i32 0)
  ret void
}

declare void @print_int(i32)
assembling to bitcode:/Users/cmk/llvm/bin/llvm-as "llvm/dev/call0.llvm" -o "llvm/dev/call0.llvm.bc" ... ok
converting to native code:/Users/cmk/llvm/bin/llc "llvm/dev/call0.llvm.bc" -o "llvm/dev/call0.llvm.s" ... ok
linking:gcc -o "llvm/dev/call0.llvm.exec" "llvm/dev/call0.llvm.s" "/Users/cmk/Developer/cworkspace/compiler/hw4/Lexer/answer/decaf-stdlib.c" ... ok
running:llvm/dev/call0.llvm.exec ... ok
